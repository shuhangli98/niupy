import niupy
import unittest

eom_dsrg = niupy.EOM_DSRG(
    opt_einsum=True,
    nroots=10,
    max_cycle=200,
    max_space=200,
    tol_s=1e-10,
    tol_semi=1e-10,
    method_type="ip",
    diagonal_type="compute",
    verbose=5,
)


class KnownValues(unittest.TestCase):

    def test_niupy_full(self):

        eom_dsrg.kernel_full()

        e = eom_dsrg.evals
        p = eom_dsrg.spec_info

        self.assertAlmostEqual(e[0], 11.0712299825, 4)
        self.assertAlmostEqual(e[1], 12.9096937411, 4)
        self.assertAlmostEqual(e[2], 17.2339756217, 4)
        self.assertAlmostEqual(e[3], 17.3971330715, 4)

        self.assertAlmostEqual(p[0], 1.97180714, 4)
        self.assertAlmostEqual(p[1], 1.95473561, 4)
        self.assertAlmostEqual(p[2], 0.00000000, 4)
        self.assertAlmostEqual(p[3], 0.00213609, 4)

    def test_niupy(self):

        eom_dsrg.kernel()

        e = eom_dsrg.evals
        p = eom_dsrg.spec_info

        self.assertAlmostEqual(e[0], 11.0712299826, 4)
        self.assertAlmostEqual(e[1], 12.9096937411, 4)
        self.assertAlmostEqual(e[2], 17.2339756217, 4)
        self.assertAlmostEqual(e[3], 17.3971330812, 4)

        self.assertAlmostEqual(p[0], 1.97180714, 4)
        self.assertAlmostEqual(p[1], 1.95473561, 4)
        self.assertAlmostEqual(p[2], 0.00000000, 4)
        self.assertAlmostEqual(p[3], 0.00213609, 4)


if __name__ == "__main__":
    print("IP calculations")
    unittest.main()


# Old Kernel full (commit: d63e3b6)
# =====================================================================================
#                                   EOM-DSRG summary
# -------------------------------------------------------------------------------------
# Root  Energy (eV)          P                    Symmetry   Spin
# -------------------------------------------------------------------------------------
# 1     11.0712299825        1.97176273           B2         Doublet
# 2     12.9096937411        1.95473542           A1         Doublet
# 3     17.2339756217        0.00000000           B2         Doublet
# 4     17.3971330715        0.00213352           A1         Doublet
# 5     17.8104691260        0.00000000           A2         Quartet
# 6     18.0399336200        0.00000000           B1         Quartet
# 7     19.4729894232        0.00101004           B2         Doublet
# 8     20.1290320001        0.00000000           A2         Quartet
# 9     26.0526135503        0.00629796           B2         Doublet
# 10    26.3393925959        0.01953874           A1         Doublet
# =====================================================================================

# Kernel full
# =====================================================================================
#                                   EOM-DSRG summary
# -------------------------------------------------------------------------------------
# Root  Energy (eV)          P                    Symmetry   Spin
# -------------------------------------------------------------------------------------
# 1     11.0712299825        1.97180714           B2         Doublet
# 2     12.9096937411        1.95473561           A1         Doublet
# 3     17.2339756217        0.00000000           B2         Doublet
# 4     17.3971330715        0.00213609           A1         Doublet
# 5     17.8104691260        0.00000000           A2         Quartet
# 6     18.0399336200        0.00000000           B1         Quartet
# 7     19.4729894232        0.00101006           B2         Doublet
# 8     20.1290320001        0.00000000           A2         Quartet
# 9     26.0526135503        0.00629810           B2         Doublet
# 10    26.3393925959        0.01953993           A1         Doublet
# =====================================================================================

# Kernel
# davidson 0 10  |r|= 0.237  e= [0.41383202 0.48878043 0.65454127 0.70085065 0.73978425 0.77453474
#  0.78412573 0.82094486 0.99017973 1.03346989]  max|de|= 1.03  lindep=    1
# Old state -> New state
#     3     ->     2
#     2     ->     3
#     7     ->     4
#     4     ->     7
#     9     ->     8
#     8     ->     9
# davidson 1 20  |r|= 0.133  e= [0.40691134 0.4745489  0.63376099 0.65452267 0.66472634 0.66562046
#  0.7197404  0.73972828 0.95840317 0.98989271]  max|de|= -0.156  lindep= 0.972
# Old state -> New state
#     4     ->     3
#     3     ->     4
#     4     ->     9
# root 4 converged  |r|= 7.93e-16  e= 0.6545226680125844  max|de|=    0
# root 7 converged  |r|= 9.61e-16  e= 0.7397282820570448  max|de|= 6.66e-16
# davidson 2 27  |r|= 0.109  e= [0.40686034 0.47442275 0.63333916 0.64097652 0.65452267 0.66296713
#  0.71576684 0.73972828 0.95744455 0.97681109]  max|de|= 0.977  lindep= 0.872
# davidson 3 35  |r|= 0.0422  e= [0.4068602  0.4744225  0.63333692 0.63934931 0.65452267 0.66295536
#  0.71561955 0.73972828 0.95741599 0.9686492 ]  max|de|= -0.00816  lindep= 0.782
# root 0 converged  |r|= 7.6e-07  e= 0.4068601975117251  max|de|= -1.5e-10
# root 1 converged  |r|= 4.34e-06  e= 0.4744224944864987  max|de|= -1.36e-09
# root 2 converged  |r|= 1.43e-06  e= 0.6333369224881435  max|de|= -1.96e-09
# davidson 4 43  |r|= 0.00838  e= [0.4068602  0.47442249 0.63333692 0.63933295 0.65452267 0.66295533
#  0.71561916 0.73972828 0.95741589 0.96797478]  max|de|= -0.000674  lindep= 0.791
# root 5 converged  |r|= 2.81e-06  e= 0.6629553328840134  max|de|= -2.6e-10
# root 6 converged  |r|= 1.32e-06  e= 0.7156191620563415  max|de|= -5.78e-10
# root 8 converged  |r|= 1.06e-06  e= 0.9574158888897628  max|de|= -1.91e-10
# davidson 5 48  |r|= 0.000776  e= [0.4068602  0.47442249 0.63333692 0.63933285 0.65452267 0.66295533
#  0.71561916 0.73972828 0.95741589 0.96795518]  max|de|= -1.96e-05  lindep= 0.794
# root 3 converged  |r|= 9.74e-06  e= 0.6393328485485993  max|de|= -3.22e-09
# davidson 6 50  |r|= 0.000382  e= [0.4068602  0.47442249 0.63333692 0.63933285 0.65452267 0.66295533
#  0.71561916 0.73972828 0.95741589 0.96795486]  max|de|= -3.21e-07  lindep= 0.787
# davidson 7 51  |r|= 2.99e-05  e= [0.4068602  0.47442249 0.63333692 0.63933285 0.65452267 0.66295533
#  0.71561916 0.73972828 0.95741589 0.96795482]  max|de|= -3.54e-08  lindep= 0.96
# root 9 converged  |r|= 1.16e-06  e= 0.9679548243018599  max|de|= -1.85e-10
# converged 8 52  |r|= 5.96e-06  e= [0.4068602  0.47442249 0.63333692 0.63933285 0.65452267 0.66295533
#  0.71561916 0.73972828 0.95741589 0.96795482]  max|de|= -1.85e-10
# All EOM-DSRG roots converged.
# Root 0: [(np.float64(0.9962814087834682), (np.int64(1),), 'A'), (np.float64(-0.1657968625550287), (np.int64(1), np.int64(1), np.int64(1)), 'cCa'), (np.float64(-0.06790124767294682), (np.int64(1), np.int64(1), np.int64(0)), 'aCa')]
# Root 1: [(np.float64(-1.6127709716661034), (np.int64(0),), 'A'), (np.float64(0.9886041549580868), (np.int64(1),), 'C'), (np.float64(-0.13849478604817775), (np.int64(1), np.int64(0), np.int64(0)), 'CAV')]
# Root 2: [(np.float64(0.5250644521484249), (np.int64(1), np.int64(1), np.int64(0)), 'aCv'), (np.float64(-0.5250644519491762), (np.int64(1), np.int64(1), np.int64(0)), 'cAv'), (np.float64(0.5250644513834696), (np.int64(1), np.int64(1), np.int64(0)), 'CAV')]
# Root 3: [(np.float64(5.851380061225508), (np.int64(0),), 'A'), (np.float64(-1.4851312001029315), (np.int64(0), np.int64(1), np.int64(0)), 'aCv'), (np.float64(0.7754512508587534), (np.int64(1), np.int64(0), np.int64(0)), 'CAV')]
# Root 4: [(np.float64(-0.5783234336855008), (np.int64(1), np.int64(1), np.int64(1)), 'cAv'), (np.float64(0.5783234336854984), (np.int64(1), np.int64(1), np.int64(1)), 'aCv'), (np.float64(0.5783234336854941), (np.int64(1), np.int64(1), np.int64(1)), 'CAV')]
# Root 5: [(np.float64(1.6498950280110365), (np.int64(0), np.int64(1), np.int64(1)), 'aCv'), (np.float64(0.8259868863589885), (np.int64(1), np.int64(0), np.int64(1)), 'cAv'), (np.float64(-0.823893765054362), (np.int64(1), np.int64(0), np.int64(1)), 'CAV')]
# Root 6: [(np.float64(0.7542329811868081), (np.int64(1), np.int64(1), np.int64(0)), 'CAV'), (np.float64(0.5641990036113761), (np.int64(1), np.int64(1), np.int64(1)), 'cCa'), (np.float64(-0.44638103207638014), (np.int64(1), np.int64(1), np.int64(0)), 'aCv')]
# Root 7: [(np.float64(-0.8104600002134003), (np.int64(1), np.int64(1), np.int64(1)), 'CAV'), (np.float64(0.5003523987912769), (np.int64(1), np.int64(1), np.int64(1)), 'aCv'), (np.float64(-0.3101076014221156), (np.int64(1), np.int64(1), np.int64(1)), 'cAv')]
# Root 8: [(np.float64(-0.6596646761759271), (np.int64(1), np.int64(1), np.int64(0)), 'cAv'), (np.float64(-0.5938939774399822), (np.int64(1), np.int64(1), np.int64(0)), 'aCv'), (np.float64(0.3322399432558694), (np.int64(1), np.int64(1), np.int64(0)), 'cAa')]
# Root 9: [(np.float64(3.9791636646533473), (np.int64(0),), 'A'), (np.float64(1.4062385234554686), (np.int64(1), np.int64(0), np.int64(0)), 'cAv'), (np.float64(0.7655009702372738), (np.int64(1), np.int64(0), np.int64(0)), 'CAV')]
# =====================================================================================
#                                   EOM-DSRG summary
# -------------------------------------------------------------------------------------
# Root  Energy (eV)          P                    Symmetry   Spin
# -------------------------------------------------------------------------------------
# 1     11.0712299826        1.97180714           B2         Doublet
# 2     12.9096937411        1.95473561           A1         Doublet
# 3     17.2339756217        0.00000000           B2         Doublet
# 4     17.3971330812        0.00213609           A1         Doublet
# 5     17.8104691260        0.00000000           A2         Quartet
# 6     18.0399336269        0.00000000           B1         Quartet
# 7     19.4729894237        0.00101006           B2         Doublet
# 8     20.1290320001        0.00000000           A2         Quartet
# 9     26.0526135506        0.00629810           B2         Doublet
# 10    26.3393925927        0.01953993           A1         Doublet
# =====================================================================================
